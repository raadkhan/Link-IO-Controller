
// Generated by Cadence Encounter(R) RTL Compiler RC14.13 - v14.10-s027_1

// Verification Directory fv/io_controller_top 

module io_controller(clk, wd_rst, opcode, io_pipe_req);
  input clk, wd_rst;
  input [8:0] opcode;
  output [9:0] io_pipe_req;
  wire clk, wd_rst;
  wire [8:0] opcode;
  wire [9:0] io_pipe_req;
  wire [3:0] present_state;
  wire n_1, n_2, n_3, n_4, n_6, n_7, n_8, n_9;
  wire n_10, n_11, n_12, n_13, n_14, n_15, n_16, n_17;
  wire n_18, n_19, n_20, n_21, n_22, n_23, n_24, n_25;
  wire n_26, n_27, n_28, n_29, n_30, n_31, n_32, n_33;
  wire n_34, n_35, n_36, n_37, n_38, n_39, n_40, n_41;
  wire n_42, n_43, n_44, n_45, n_46, n_47, n_48, n_49;
  wire n_50, n_51, n_52, n_53, n_54, n_55, n_56, n_57;
  wire n_58, n_59, n_60, n_61, n_62, n_63, n_64, n_65;
  wire n_66, n_67, n_68, n_69, n_70, n_71, n_72, n_73;
  wire n_81;
  NOR2_X1 g604(.A1 (n_70), .A2 (n_81), .ZN (io_pipe_req[9]));
  NOR2_X1 g605(.A1 (n_70), .A2 (n_72), .ZN (io_pipe_req[4]));
  NOR2_X1 g606(.A1 (n_68), .A2 (n_72), .ZN (io_pipe_req[3]));
  NOR2_X1 g607(.A1 (n_68), .A2 (n_81), .ZN (io_pipe_req[8]));
  NOR2_X1 g608(.A1 (n_71), .A2 (n_69), .ZN (io_pipe_req[7]));
  NOR3_X1 g609(.A1 (n_71), .A2 (present_state[0]), .A3
       (present_state[1]), .ZN (io_pipe_req[2]));
  NOR3_X1 g610(.A1 (n_81), .A2 (n_66), .A3 (n_73), .ZN
       (io_pipe_req[5]));
  NOR3_X1 g611(.A1 (n_71), .A2 (n_66), .A3 (present_state[1]), .ZN
       (io_pipe_req[1]));
  NOR3_X1 g612(.A1 (n_71), .A2 (present_state[0]), .A3 (n_67), .ZN
       (io_pipe_req[0]));
  NOR3_X1 g613(.A1 (n_81), .A2 (n_73), .A3 (present_state[0]), .ZN
       (io_pipe_req[6]));
  OR2_X1 g614(.A1 (n_67), .A2 (present_state[2]), .Z (n_72));
  NAND2_X1 g615(.A1 (n_73), .A2 (present_state[2]), .ZN (n_71));
  OR2_X1 g616(.A1 (present_state[2]), .A2 (present_state[1]), .Z
       (n_81));
  NAND2_X1 g617(.A1 (n_66), .A2 (n_73), .ZN (n_70));
  NAND2_X1 g618(.A1 (present_state[0]), .A2 (present_state[1]), .ZN
       (n_69));
  NAND2_X1 g619(.A1 (present_state[0]), .A2 (n_73), .ZN (n_68));
  INV_X1 g620(.I (present_state[1]), .ZN (n_67));
  INV_X1 g621(.I (present_state[0]), .ZN (n_66));
  INV_X1 g622(.I (present_state[3]), .ZN (n_73));
  DFFSNQ_X1 \present_state_reg[0] (.SN (1'b1), .CLK (clk), .D (n_65),
       .Q (present_state[0]));
  DFFSNQ_X1 \present_state_reg[2] (.SN (1'b1), .CLK (clk), .D (n_64),
       .Q (present_state[2]));
  DFFSNQ_X1 \present_state_reg[1] (.SN (1'b1), .CLK (clk), .D (n_63),
       .Q (present_state[1]));
  NAND3_X1 g1227(.A1 (n_58), .A2 (n_53), .A3 (n_62), .ZN (n_65));
  OAI21_X1 g1228(.A1 (n_60), .A2 (wd_rst), .B (n_11), .ZN (n_64));
  NAND2_X1 g1229(.A1 (n_58), .A2 (n_61), .ZN (n_63));
  NAND2_X1 g1230(.A1 (n_57), .A2 (n_7), .ZN (n_62));
  NOR2_X1 g1231(.A1 (n_56), .A2 (n_59), .ZN (n_61));
  AND3_X1 g1232(.A1 (n_55), .A2 (n_51), .A3 (n_33), .Z (n_60));
  AOI21_X1 g1233(.A1 (n_50), .A2 (n_21), .B (wd_rst), .ZN (n_59));
  NAND2_X1 g1234(.A1 (n_54), .A2 (n_7), .ZN (n_58));
  NAND4_X1 g1235(.A1 (n_49), .A2 (n_32), .A3 (n_36), .A4 (n_18), .ZN
       (n_57));
  OAI21_X1 g1236(.A1 (n_46), .A2 (n_11), .B (n_45), .ZN (n_56));
  AOI21_X1 g1237(.A1 (n_47), .A2 (io_pipe_req[3]), .B (io_pipe_req[2]),
       .ZN (n_55));
  NAND2_X1 g1238(.A1 (n_52), .A2 (n_33), .ZN (n_54));
  AOI22_X1 g1239(.A1 (n_40), .A2 (n_28), .B1 (n_46), .B2 (n_12), .ZN
       (n_53));
  NAND2_X1 g1240(.A1 (n_48), .A2 (io_pipe_req[3]), .ZN (n_52));
  NAND2_X1 g1241(.A1 (n_46), .A2 (io_pipe_req[0]), .ZN (n_51));
  AOI21_X1 g1242(.A1 (n_42), .A2 (io_pipe_req[8]), .B (io_pipe_req[4]),
       .ZN (n_50));
  DFFSNQ_X1 \present_state_reg[3] (.SN (1'b1), .CLK (clk), .D (n_43),
       .Q (present_state[3]));
  NAND2_X1 g1244(.A1 (n_41), .A2 (io_pipe_req[8]), .ZN (n_49));
  INV_X1 g1245(.I (n_47), .ZN (n_48));
  NOR2_X1 g1246(.A1 (n_44), .A2 (opcode[0]), .ZN (n_47));
  NAND3_X1 g1247(.A1 (n_37), .A2 (n_1), .A3 (opcode[0]), .ZN (n_46));
  NAND3_X1 g1248(.A1 (n_37), .A2 (io_pipe_req[2]), .A3 (n_20), .ZN
       (n_45));
  NAND2_X1 g1249(.A1 (n_37), .A2 (opcode[2]), .ZN (n_44));
  AOI21_X1 g1250(.A1 (n_36), .A2 (n_30), .B (wd_rst), .ZN (n_43));
  INV_X1 g1251(.I (n_41), .ZN (n_42));
  NAND4_X1 g1252(.A1 (n_34), .A2 (n_10), .A3 (n_6), .A4 (opcode[4]),
       .ZN (n_41));
  NAND2_X1 g1253(.A1 (n_38), .A2 (n_39), .ZN (n_40));
  NAND4_X1 g1254(.A1 (io_pipe_req[2]), .A2 (n_6), .A3 (n_27), .A4
       (opcode[1]), .ZN (n_39));
  NAND3_X1 g1255(.A1 (io_pipe_req[4]), .A2 (n_34), .A3 (opcode[3]), .ZN
       (n_38));
  NOR3_X1 g1256(.A1 (n_35), .A2 (opcode[3]), .A3 (opcode[4]), .ZN
       (n_37));
  NOR2_X1 g1257(.A1 (n_31), .A2 (n_25), .ZN (n_36));
  INV_X1 g1258(.I (n_34), .ZN (n_35));
  NOR2_X1 g1259(.A1 (n_26), .A2 (opcode[1]), .ZN (n_34));
  AOI22_X1 g1260(.A1 (n_17), .A2 (n_14), .B1 (io_pipe_req[7]), .B2
       (n_24), .ZN (n_33));
  OAI21_X1 g1261(.A1 (io_pipe_req[6]), .A2 (io_pipe_req[9]), .B (n_27),
       .ZN (n_32));
  NAND2_X1 g1262(.A1 (n_15), .A2 (n_29), .ZN (n_31));
  AOI22_X1 g1263(.A1 (n_22), .A2 (n_14), .B1 (io_pipe_req[6]), .B2
       (n_24), .ZN (n_30));
  NAND2_X1 g1264(.A1 (io_pipe_req[5]), .A2 (n_24), .ZN (n_29));
  NOR2_X1 g1265(.A1 (n_19), .A2 (opcode[4]), .ZN (n_28));
  INV_X1 g1266(.I (n_26), .ZN (n_27));
  NAND2_X1 g1267(.A1 (n_23), .A2 (opcode[8]), .ZN (n_26));
  NOR4_X1 g1268(.A1 (n_13), .A2 (n_2), .A3 (opcode[6]), .A4
       (opcode[7]), .ZN (n_25));
  INV_X1 g1269(.I (n_23), .ZN (n_24));
  NOR2_X1 g1270(.A1 (n_8), .A2 (opcode[6]), .ZN (n_23));
  AND2_X1 g1271(.A1 (n_9), .A2 (opcode[6]), .Z (n_22));
  NOR2_X1 g1272(.A1 (io_pipe_req[0]), .A2 (n_16), .ZN (n_21));
  INV_X1 g1273(.I (n_19), .ZN (n_20));
  NAND2_X1 g1274(.A1 (n_10), .A2 (n_7), .ZN (n_19));
  OAI21_X1 g1275(.A1 (io_pipe_req[7]), .A2 (io_pipe_req[5]), .B
       (opcode[8]), .ZN (n_18));
  NOR3_X1 g1276(.A1 (n_3), .A2 (opcode[5]), .A3 (opcode[6]), .ZN
       (n_17));
  INV_X1 g1277(.I (n_15), .ZN (n_16));
  NAND2_X1 g1278(.A1 (n_81), .A2 (present_state[3]), .ZN (n_15));
  INV_X1 g1279(.I (n_13), .ZN (n_14));
  NAND2_X1 g1280(.A1 (io_pipe_req[9]), .A2 (n_4), .ZN (n_13));
  INV_X1 g1281(.I (n_11), .ZN (n_12));
  NAND2_X1 g1282(.A1 (io_pipe_req[1]), .A2 (n_7), .ZN (n_11));
  NOR2_X1 g1283(.A1 (opcode[0]), .A2 (opcode[2]), .ZN (n_10));
  INV_X1 g1284(.I (n_8), .ZN (n_9));
  NAND2_X1 g1285(.A1 (n_3), .A2 (n_2), .ZN (n_8));
  INV_X1 g1286(.I (wd_rst), .ZN (n_7));
  INV_X1 g1287(.I (opcode[3]), .ZN (n_6));
  INV_X1 g1289(.I (opcode[8]), .ZN (n_4));
  INV_X1 g1290(.I (opcode[7]), .ZN (n_3));
  INV_X1 g1291(.I (opcode[5]), .ZN (n_2));
  INV_X1 g1292(.I (opcode[2]), .ZN (n_1));
endmodule

module opcode_encoder(app_activate, app_hibernate, timer_sleep,
     charger_charge, afe_ok, a2d_ok, dsp_ok, blem_ok, opcode);
  input app_activate, app_hibernate, timer_sleep, charger_charge,
       afe_ok, a2d_ok, dsp_ok, blem_ok;
  output [8:0] opcode;
  wire app_activate, app_hibernate, timer_sleep, charger_charge,
       afe_ok, a2d_ok, dsp_ok, blem_ok;
  wire [8:0] opcode;
  wire n_1;
  assign opcode[5] = 1'b0;
  assign opcode[6] = 1'b0;
  assign opcode[7] = 1'b0;
  assign opcode[8] = 1'b0;
  AND2_X1 g72(.A1 (n_1), .A2 (afe_ok), .Z (opcode[3]));
  AND2_X1 g73(.A1 (n_1), .A2 (a2d_ok), .Z (opcode[2]));
  AND2_X1 g74(.A1 (n_1), .A2 (dsp_ok), .Z (opcode[1]));
  AND2_X1 g75(.A1 (n_1), .A2 (blem_ok), .Z (opcode[0]));
  INV_X1 g76(.I (n_1), .ZN (opcode[4]));
  NAND4_X1 g77(.A1 (a2d_ok), .A2 (afe_ok), .A3 (dsp_ok), .A4 (blem_ok),
       .ZN (n_1));
endmodule

module io_controller_top_map(clk, wd_rst, app_activate, app_hibernate,
     timer_sleep, charger_charge, afe_ok, a2d_ok, dsp_ok, blem_ok,
     idle_o, activate_o, hibernate_o, sleep_o, charge_o, stream_eeg_o,
     process_eeg_o, interpret_eeg_o, build_ble_cmd_o,
     publish_ble_cmd_o);
  input clk, wd_rst, app_activate, app_hibernate, timer_sleep,
       charger_charge, afe_ok, a2d_ok, dsp_ok, blem_ok;
  output idle_o, activate_o, hibernate_o, sleep_o, charge_o,
       stream_eeg_o, process_eeg_o, interpret_eeg_o, build_ble_cmd_o,
       publish_ble_cmd_o;
  wire clk, wd_rst, app_activate, app_hibernate, timer_sleep,
       charger_charge, afe_ok, a2d_ok, dsp_ok, blem_ok;
  wire idle_o, activate_o, hibernate_o, sleep_o, charge_o,
       stream_eeg_o, process_eeg_o, interpret_eeg_o, build_ble_cmd_o,
       publish_ble_cmd_o;
  wire [8:0] opcode;
  wire UNCONNECTED, UNCONNECTED0, UNCONNECTED1, UNCONNECTED2;
  io_controller ic(clk, wd_rst, {app_activate, app_hibernate, timer_sleep,
       charger_charge, opcode[4:0]}, {idle_o, activate_o, hibernate_o,
       sleep_o, charge_o, stream_eeg_o, process_eeg_o, interpret_eeg_o,
       build_ble_cmd_o, publish_ble_cmd_o});
  opcode_encoder oe(1'b0, 1'b0, 1'b0, 1'b0, afe_ok, a2d_ok, dsp_ok,
       blem_ok, {UNCONNECTED2, UNCONNECTED1, UNCONNECTED0, UNCONNECTED,
       opcode[4:0]});
endmodule

