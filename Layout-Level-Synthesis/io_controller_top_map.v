
// Generated by Cadence Encounter(R) RTL Compiler RC14.13 - v14.10-s027_1

// Verification Directory fv/io_controller_top 

module io_controller(clk, wd_rst, opcode, io_pipe_req);
  input clk, wd_rst;
  input [8:0] opcode;
  output [9:0] io_pipe_req;
  wire clk, wd_rst;
  wire [8:0] opcode;
  wire [9:0] io_pipe_req;
  wire [3:0] present_state;
  wire n_0, n_1, n_2, n_3, n_4, n_5, n_6, n_7;
  wire n_8, n_9, n_10, n_11, n_12, n_13, n_14, n_15;
  wire n_16, n_17, n_18, n_19, n_20, n_21, n_22, n_23;
  wire n_24, n_25, n_26, n_27, n_28, n_29, n_30, n_31;
  wire n_32, n_33, n_34, n_35, n_36, n_37, n_38, n_39;
  wire n_40, n_41, n_42, n_43, n_44, n_45, n_46, n_47;
  wire n_48, n_49, n_50, n_51, n_52, n_60;
  NOR2X1 g613(.A (n_45), .B (n_50), .Y (io_pipe_req[7]));
  AND2XL g614(.A (present_state[0]), .B (n_51), .Y (io_pipe_req[3]));
  NOR2X1 g615(.A (present_state[0]), .B (n_50), .Y (io_pipe_req[0]));
  NOR2X1 g616(.A (present_state[0]), .B (n_48), .Y (io_pipe_req[6]));
  NOR2X1 g617(.A (n_45), .B (n_48), .Y (io_pipe_req[5]));
  NOR2BX1 g618(.AN (n_51), .B (present_state[0]), .Y (io_pipe_req[4]));
  NOR2X1 g619(.A (present_state[0]), .B (n_49), .Y (io_pipe_req[9]));
  NOR2X1 g620(.A (n_45), .B (n_49), .Y (io_pipe_req[8]));
  NOR2X1 g621(.A (present_state[0]), .B (n_47), .Y (io_pipe_req[2]));
  NOR2X1 g622(.A (n_45), .B (n_47), .Y (io_pipe_req[1]));
  NOR2X1 g623(.A (present_state[2]), .B (n_46), .Y (n_51));
  NAND2BX1 g624(.AN (n_46), .B (present_state[2]), .Y (n_50));
  OR2XL g625(.A (present_state[3]), .B (n_60), .Y (n_49));
  NAND2BX1 g626(.AN (n_60), .B (present_state[3]), .Y (n_48));
  NAND3BXL g627(.AN (present_state[1]), .B (present_state[2]), .C
       (n_52), .Y (n_47));
  OR2XL g628(.A (present_state[2]), .B (present_state[1]), .Y (n_60));
  NAND2X1 g629(.A (present_state[1]), .B (n_52), .Y (n_46));
  INVX1 g631(.A (present_state[3]), .Y (n_52));
  DFFQXL \present_state_reg[1] (.CK (clk), .D (n_43), .Q
       (present_state[1]));
  DFFHQX1 \present_state_reg[2] (.CK (clk), .D (n_42), .Q
       (present_state[2]));
  OAI211X1 g1179(.A0 (opcode[4]), .A1 (n_31), .B0 (n_38), .C0 (n_39),
       .Y (n_44));
  NAND2X1 g1180(.A (n_41), .B (n_39), .Y (n_43));
  OAI21X1 g1181(.A0 (wd_rst), .A1 (n_40), .B0 (n_6), .Y (n_42));
  AOI31X1 g1182(.A0 (n_11), .A1 (n_22), .A2 (io_pipe_req[2]), .B0
       (n_37), .Y (n_41));
  NOR2BX1 g1183(.AN (n_36), .B (io_pipe_req[2]), .Y (n_40));
  OA21X1 g1184(.A0 (wd_rst), .A1 (n_33), .B0 (n_7), .Y (n_39));
  AOI22X1 g1185(.A0 (n_1), .A1 (n_35), .B0 (n_5), .B1 (n_27), .Y
       (n_38));
  OAI22X1 g1186(.A0 (wd_rst), .A1 (n_34), .B0 (n_6), .B1 (n_27), .Y
       (n_37));
  AOI221X1 g1187(.A0 (n_29), .A1 (io_pipe_req[3]), .B0 (n_27), .B1
       (io_pipe_req[0]), .C0 (n_20), .Y (n_36));
  NAND4XL g1188(.A (n_8), .B (n_21), .C (n_17), .D (n_32), .Y (n_35));
  AOI211XL g1189(.A0 (n_26), .A1 (io_pipe_req[8]), .B0
       (io_pipe_req[4]), .C0 (io_pipe_req[0]), .Y (n_34));
  AOI21X1 g1190(.A0 (n_28), .A1 (io_pipe_req[3]), .B0 (n_20), .Y
       (n_33));
  DFFHQX1 \present_state_reg[3] (.CK (clk), .D (n_30), .Q
       (present_state[3]));
  NAND2X1 g1192(.A (n_25), .B (io_pipe_req[8]), .Y (n_32));
  NAND2BX1 g1193(.AN (n_24), .B (n_11), .Y (n_31));
  OAI2BB1X1 g1194(.A0N (n_1), .A1N (n_23), .B0 (n_7), .Y (n_30));
  INVX1 g1195(.A (n_28), .Y (n_29));
  NAND3BXL g1196(.AN (opcode[0]), .B (opcode[2]), .C (n_22), .Y (n_28));
  NAND3BXL g1197(.AN (opcode[2]), .B (opcode[0]), .C (n_22), .Y (n_27));
  INVX1 g1198(.A (n_25), .Y (n_26));
  NAND4BXL g1199(.AN (opcode[3]), .B (opcode[4]), .C (n_18), .D (n_3),
       .Y (n_25));
  AOI32X1 g1200(.A0 (opcode[3]), .A1 (n_18), .A2 (io_pipe_req[4]), .B0
       (n_19), .B1 (io_pipe_req[2]), .Y (n_24));
  NAND2X1 g1201(.A (n_16), .B (n_21), .Y (n_23));
  NOR3BXL g1202(.AN (n_18), .B (opcode[4]), .C (opcode[3]), .Y (n_22));
  AOI32X1 g1203(.A0 (opcode[5]), .A1 (n_0), .A2 (n_12), .B0 (n_10), .B1
       (io_pipe_req[5]), .Y (n_21));
  OAI31X1 g1204(.A0 (opcode[5]), .A1 (opcode[6]), .A2 (n_9), .B0
       (n_15), .Y (n_20));
  NOR3BXL g1205(.AN (opcode[1]), .B (n_14), .C (opcode[3]), .Y (n_19));
  NOR2XL g1206(.A (n_14), .B (opcode[1]), .Y (n_18));
  OAI21X1 g1207(.A0 (io_pipe_req[9]), .A1 (io_pipe_req[6]), .B0 (n_13),
       .Y (n_17));
  AOI32X1 g1208(.A0 (opcode[6]), .A1 (n_4), .A2 (n_2), .B0 (n_10), .B1
       (io_pipe_req[6]), .Y (n_16));
  NAND2X1 g1209(.A (n_10), .B (io_pipe_req[7]), .Y (n_15));
  INVX1 g1210(.A (n_14), .Y (n_13));
  NAND2BXL g1211(.AN (n_10), .B (opcode[8]), .Y (n_14));
  NOR2BX1 g1212(.AN (n_2), .B (opcode[7]), .Y (n_12));
  AND2X1 g1213(.A (n_3), .B (n_1), .Y (n_11));
  NAND2XL g1214(.A (n_0), .B (n_4), .Y (n_10));
  NAND2X1 g1215(.A (opcode[7]), .B (n_2), .Y (n_9));
  OAI21X1 g1216(.A0 (io_pipe_req[5]), .A1 (io_pipe_req[7]), .B0
       (opcode[8]), .Y (n_8));
  NAND3BXL g1217(.AN (n_52), .B (n_1), .C (n_60), .Y (n_7));
  INVX1 g1218(.A (n_6), .Y (n_5));
  NAND2X1 g1219(.A (n_1), .B (io_pipe_req[1]), .Y (n_6));
  NOR2XL g1220(.A (opcode[5]), .B (opcode[7]), .Y (n_4));
  NOR2XL g1221(.A (opcode[2]), .B (opcode[0]), .Y (n_3));
  NOR2BX1 g1222(.AN (io_pipe_req[9]), .B (opcode[8]), .Y (n_2));
  INVX1 g1223(.A (wd_rst), .Y (n_1));
  INVX1 g1224(.A (opcode[6]), .Y (n_0));
  DFFX1 \present_state_reg[0] (.CK (clk), .D (n_44), .Q
       (present_state[0]), .QN (n_45));
endmodule

module opcode_encoder(app_activate, app_hibernate, timer_sleep,
     charger_charge, afe_ok, a2d_ok, dsp_ok, blem_ok, opcode);
  input app_activate, app_hibernate, timer_sleep, charger_charge,
       afe_ok, a2d_ok, dsp_ok, blem_ok;
  output [8:0] opcode;
  wire app_activate, app_hibernate, timer_sleep, charger_charge,
       afe_ok, a2d_ok, dsp_ok, blem_ok;
  wire [8:0] opcode;
  wire n_2;
  assign opcode[5] = opcode[8];
  assign opcode[6] = opcode[8];
  assign opcode[7] = opcode[8];
  AND2X1 g72(.A (n_2), .B (afe_ok), .Y (opcode[3]));
  AND2X1 g73(.A (n_2), .B (a2d_ok), .Y (opcode[2]));
  AND2X1 g74(.A (n_2), .B (dsp_ok), .Y (opcode[1]));
  AND2X1 g75(.A (n_2), .B (blem_ok), .Y (opcode[0]));
  INVX1 g76(.A (n_2), .Y (opcode[4]));
  NAND4X1 g77(.A (blem_ok), .B (dsp_ok), .C (afe_ok), .D (a2d_ok), .Y
       (n_2));
  TIELO tie_0_cell(.Y (opcode[8]));
endmodule

module io_controller_top(VDD, VSS, clk, wd_rst, app_activate, app_hibernate,
     timer_sleep, charger_charge, afe_ok, a2d_ok, dsp_ok, blem_ok,
     idle_o, activate_o, hibernate_o, sleep_o, charge_o, stream_eeg_o,
     process_eeg_o, interpret_eeg_o, build_ble_cmd_o,
     publish_ble_cmd_o);
  inout VDD, VSS;
  input clk, wd_rst, app_activate, app_hibernate, timer_sleep,
       charger_charge, afe_ok, a2d_ok, dsp_ok, blem_ok;
  output idle_o, activate_o, hibernate_o, sleep_o, charge_o,
       stream_eeg_o, process_eeg_o, interpret_eeg_o, build_ble_cmd_o,
       publish_ble_cmd_o;
  wire clk, wd_rst, app_activate, app_hibernate, timer_sleep,
       charger_charge, afe_ok, a2d_ok, dsp_ok, blem_ok;
  wire idle_o, activate_o, hibernate_o, sleep_o, charge_o,
       stream_eeg_o, process_eeg_o, interpret_eeg_o, build_ble_cmd_o,
       publish_ble_cmd_o;
  wire [8:0] opcode;
  wire UNCONNECTED, UNCONNECTED0, UNCONNECTED1, UNCONNECTED2,
       logic_0_1_net;
  io_controller ic(clk, wd_rst, {app_activate, app_hibernate, timer_sleep,
       charger_charge, opcode[4:0]}, {idle_o, activate_o, hibernate_o,
       sleep_o, charge_o, stream_eeg_o, process_eeg_o, interpret_eeg_o,
       build_ble_cmd_o, publish_ble_cmd_o});
  opcode_encoder oe(logic_0_1_net, logic_0_1_net, logic_0_1_net,
       logic_0_1_net, afe_ok, a2d_ok, dsp_ok, blem_ok, {UNCONNECTED2,
       UNCONNECTED1, UNCONNECTED0, UNCONNECTED, opcode[4:0]});
  TIELO tie_0_cell(.Y (logic_0_1_net));
endmodule

